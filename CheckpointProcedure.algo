// Procedure compute dot product
PROCEDURE dot_product(arrayA, ArrayB)
VAR
 i :INTEGER;
 ps :FLOAT;
BEGIN
    IF (arrayA.length = arrayB.length) THEN
        FOR i FROM 0 TO arrayA.length STEP 1  DO
            ps = ps + arrayA[i] * arrayB[i];
        END_FOR
    END_IF
    orthogonal (ps);
END

// Prodecure of orthogonal vectors
PROCEDURE orthogonal (dotProduct)
BEGIN
    IF (dotProduct =0) THEN
        Write ("vectors are orthogonal")
    ELSE
        Write ("Vectors are not orthogonal")
    END_IF
END

//  algorithm based on predecure
ALGORITHM orthogonal_vector
VAR
    Array1 : ARRAY_OF float [5];
    Array2 : ARRAY_OF  float[5];
BEGIN
    array1 ={1, 3, 5, 8, 9};
    array2 ={6, 8, 9, 5, 5};
    dot_product(array1,array2);
END
